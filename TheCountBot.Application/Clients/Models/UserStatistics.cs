// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TheCountBot.Application.Clients.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserStatistics
    {
        /// <summary>
        /// Initializes a new instance of the UserStatistics class.
        /// </summary>
        public UserStatistics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserStatistics class.
        /// </summary>
        public UserStatistics(string username = default(string), int? messagesSentCount = default(int?), int? mistakeCount = default(int?), double? errorRate = default(double?), double? totalMessagePercentage = default(double?), double? totalErrorRate = default(double?), double? relativeErrorRate = default(double?))
        {
            Username = username;
            MessagesSentCount = messagesSentCount;
            MistakeCount = mistakeCount;
            ErrorRate = errorRate;
            TotalMessagePercentage = totalMessagePercentage;
            TotalErrorRate = totalErrorRate;
            RelativeErrorRate = relativeErrorRate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messagesSentCount")]
        public int? MessagesSentCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mistakeCount")]
        public int? MistakeCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "errorRate")]
        public double? ErrorRate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalMessagePercentage")]
        public double? TotalMessagePercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalErrorRate")]
        public double? TotalErrorRate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relativeErrorRate")]
        public double? RelativeErrorRate { get; set; }

    }
}
